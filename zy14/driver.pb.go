// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0--rc2
// source: driver.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 司机短信发送请求
type DriverSendSmsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mobile        string                 `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"` //手机号码
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"` //验证码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverSendSmsRequest) Reset() {
	*x = DriverSendSmsRequest{}
	mi := &file_driver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverSendSmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverSendSmsRequest) ProtoMessage() {}

func (x *DriverSendSmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverSendSmsRequest.ProtoReflect.Descriptor instead.
func (*DriverSendSmsRequest) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{0}
}

func (x *DriverSendSmsRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *DriverSendSmsRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// 司机短信发送响应
type DriverSendSmsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //响应状态码
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverSendSmsResponse) Reset() {
	*x = DriverSendSmsResponse{}
	mi := &file_driver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverSendSmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverSendSmsResponse) ProtoMessage() {}

func (x *DriverSendSmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverSendSmsResponse.ProtoReflect.Descriptor instead.
func (*DriverSendSmsResponse) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{1}
}

func (x *DriverSendSmsResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DriverSendSmsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 司机登录注册一体化请求
type DriverLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mobile        string                 `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"` //手机号码
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"` //验证码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverLoginRequest) Reset() {
	*x = DriverLoginRequest{}
	mi := &file_driver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLoginRequest) ProtoMessage() {}

func (x *DriverLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLoginRequest.ProtoReflect.Descriptor instead.
func (*DriverLoginRequest) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{2}
}

func (x *DriverLoginRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *DriverLoginRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// 司机登录注册一体化响应
type DriverLoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //响应状态码
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverLoginResponse) Reset() {
	*x = DriverLoginResponse{}
	mi := &file_driver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLoginResponse) ProtoMessage() {}

func (x *DriverLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLoginResponse.ProtoReflect.Descriptor instead.
func (*DriverLoginResponse) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{3}
}

func (x *DriverLoginResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DriverLoginResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 完善司机信息请求
type UpdateDriverRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                        //司机信息记录ID
	UserId            int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                  //用户ID
	DriverName        string                 `protobuf:"bytes,3,opt,name=driver_name,json=driverName,proto3" json:"driver_name,omitempty"`                       //司机姓名
	DriverLicense     string                 `protobuf:"bytes,4,opt,name=driver_license,json=driverLicense,proto3" json:"driver_license,omitempty"`              //驾驶证号
	VehicleLicense    string                 `protobuf:"bytes,5,opt,name=vehicle_license,json=vehicleLicense,proto3" json:"vehicle_license,omitempty"`           //行驶证号
	VehicleType       string                 `protobuf:"bytes,6,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`                    //车辆类型
	ApplicationStatus int64                  `protobuf:"varint,7,opt,name=application_status,json=applicationStatus,proto3" json:"application_status,omitempty"` //申请状态：1-待审核，2-审核通过，3-审核拒绝
	RejectReason      string                 `protobuf:"bytes,8,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`                 //拒绝原因
	AuditorId         int64                  `protobuf:"varint,9,opt,name=auditor_id,json=auditorId,proto3" json:"auditor_id,omitempty"`                         //审核人ID
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateDriverRequest) Reset() {
	*x = UpdateDriverRequest{}
	mi := &file_driver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverRequest) ProtoMessage() {}

func (x *UpdateDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverRequest.ProtoReflect.Descriptor instead.
func (*UpdateDriverRequest) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDriverRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDriverRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateDriverRequest) GetDriverName() string {
	if x != nil {
		return x.DriverName
	}
	return ""
}

func (x *UpdateDriverRequest) GetDriverLicense() string {
	if x != nil {
		return x.DriverLicense
	}
	return ""
}

func (x *UpdateDriverRequest) GetVehicleLicense() string {
	if x != nil {
		return x.VehicleLicense
	}
	return ""
}

func (x *UpdateDriverRequest) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *UpdateDriverRequest) GetApplicationStatus() int64 {
	if x != nil {
		return x.ApplicationStatus
	}
	return 0
}

func (x *UpdateDriverRequest) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

func (x *UpdateDriverRequest) GetAuditorId() int64 {
	if x != nil {
		return x.AuditorId
	}
	return 0
}

// 完善司机信息响应
type UpdateDriverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //响应状态码
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDriverResponse) Reset() {
	*x = UpdateDriverResponse{}
	mi := &file_driver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverResponse) ProtoMessage() {}

func (x *UpdateDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverResponse.ProtoReflect.Descriptor instead.
func (*UpdateDriverResponse) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDriverResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateDriverResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_driver_proto protoreflect.FileDescriptor

const file_driver_proto_rawDesc = "" +
	"\n" +
	"\fdriver.proto\x12\x11api.helloworld.v1\x1a\x1cgoogle/api/annotations.proto\"F\n" +
	"\x14DriverSendSmsRequest\x12\x16\n" +
	"\x06mobile\x18\x01 \x01(\tR\x06mobile\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\"E\n" +
	"\x15DriverSendSmsResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"D\n" +
	"\x12DriverLoginRequest\x12\x16\n" +
	"\x06mobile\x18\x01 \x01(\tR\x06mobile\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\"C\n" +
	"\x13DriverLoginResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xc5\x02\n" +
	"\x13UpdateDriverRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x1f\n" +
	"\vdriver_name\x18\x03 \x01(\tR\n" +
	"driverName\x12%\n" +
	"\x0edriver_license\x18\x04 \x01(\tR\rdriverLicense\x12'\n" +
	"\x0fvehicle_license\x18\x05 \x01(\tR\x0evehicleLicense\x12!\n" +
	"\fvehicle_type\x18\x06 \x01(\tR\vvehicleType\x12-\n" +
	"\x12application_status\x18\a \x01(\x03R\x11applicationStatus\x12#\n" +
	"\rreject_reason\x18\b \x01(\tR\frejectReason\x12\x1d\n" +
	"\n" +
	"auditor_id\x18\t \x01(\x03R\tauditorId\"D\n" +
	"\x14UpdateDriverResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xf3\x02\n" +
	"\x06Driver\x12{\n" +
	"\aSendSms\x12'.api.helloworld.v1.DriverSendSmsRequest\x1a(.api.helloworld.v1.DriverSendSmsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/v1/driver/sendSms\x12s\n" +
	"\x05Login\x12%.api.helloworld.v1.DriverLoginRequest\x1a&.api.helloworld.v1.DriverLoginResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/driver/login\x12w\n" +
	"\x06Update\x12&.api.helloworld.v1.UpdateDriverRequest\x1a'.api.helloworld.v1.UpdateDriverResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/driver/updateB6\n" +
	"\x11api.helloworld.v1P\x01Z\x1fhelloworld/api/helloworld/v1;v1b\x06proto3"

var (
	file_driver_proto_rawDescOnce sync.Once
	file_driver_proto_rawDescData []byte
)

func file_driver_proto_rawDescGZIP() []byte {
	file_driver_proto_rawDescOnce.Do(func() {
		file_driver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_driver_proto_rawDesc), len(file_driver_proto_rawDesc)))
	})
	return file_driver_proto_rawDescData
}

var file_driver_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_driver_proto_goTypes = []any{
	(*DriverSendSmsRequest)(nil),  // 0: api.helloworld.v1.DriverSendSmsRequest
	(*DriverSendSmsResponse)(nil), // 1: api.helloworld.v1.DriverSendSmsResponse
	(*DriverLoginRequest)(nil),    // 2: api.helloworld.v1.DriverLoginRequest
	(*DriverLoginResponse)(nil),   // 3: api.helloworld.v1.DriverLoginResponse
	(*UpdateDriverRequest)(nil),   // 4: api.helloworld.v1.UpdateDriverRequest
	(*UpdateDriverResponse)(nil),  // 5: api.helloworld.v1.UpdateDriverResponse
}
var file_driver_proto_depIdxs = []int32{
	0, // 0: api.helloworld.v1.Driver.SendSms:input_type -> api.helloworld.v1.DriverSendSmsRequest
	2, // 1: api.helloworld.v1.Driver.Login:input_type -> api.helloworld.v1.DriverLoginRequest
	4, // 2: api.helloworld.v1.Driver.Update:input_type -> api.helloworld.v1.UpdateDriverRequest
	1, // 3: api.helloworld.v1.Driver.SendSms:output_type -> api.helloworld.v1.DriverSendSmsResponse
	3, // 4: api.helloworld.v1.Driver.Login:output_type -> api.helloworld.v1.DriverLoginResponse
	5, // 5: api.helloworld.v1.Driver.Update:output_type -> api.helloworld.v1.UpdateDriverResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_driver_proto_init() }
func file_driver_proto_init() {
	if File_driver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_driver_proto_rawDesc), len(file_driver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_driver_proto_goTypes,
		DependencyIndexes: file_driver_proto_depIdxs,
		MessageInfos:      file_driver_proto_msgTypes,
	}.Build()
	File_driver_proto = out.File
	file_driver_proto_goTypes = nil
	file_driver_proto_depIdxs = nil
}
